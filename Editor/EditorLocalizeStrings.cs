// Generated by Assets/Hananoki/BuildAssist/Localize/en-US.csv

namespace Hananoki.BuildAssist {
	public static class L {
		public static string Tr( int n ) {
			try {
				return EditorLocalize.GetPakage( Package.name ).m_Strings[ n ];
			}
			catch( System.Exception ) {
			}
			return string.Empty;
		}
	}
	public static class S {
		public static string _ProductName => L.Tr( 0 );
		public static string _Configuration => L.Tr( 1 );
		public static string _Build => L.Tr( 2 );
		public static string _SwitchPlatform => L.Tr( 3 );
		public static string _Architecture => L.Tr( 4 );
		public static string _SelectOutputDirectory => L.Tr( 5 );
		public static string _Compression => L.Tr( 6 );
		public static string _CompressionMethod => L.Tr( 7 );
		public static string __NotFoundDirectory__ => L.Tr( 8 );
		public static string __ActiveBuildTarget_ => L.Tr( 9 );
		public static string _PlayerSettings_Androidsettingsareincomplete => L.Tr( 10 );
		public static string _IfBundleVersionCodeis0_abuilderroroccurs => L.Tr( 11 );
		public static string _AnerroroccursifPackageNameis_com_Company_ProductName_ => L.Tr( 12 );
		public static string _PackageNameisempty => L.Tr( 13 );
		public static string _PackageNamemustbeseparatedbyatleastone__Dot_ => L.Tr( 14 );
		public static string _AnerroroccursifPackageNamestartswitha__Dot_ => L.Tr( 15 );
		public static string _AnerroroccursiftheendofPackageNameis__Dot_ => L.Tr( 16 );
		public static string _PackageNameofIdentificationisempty => L.Tr( 17 );
		public static string _DevelopmentBuild => L.Tr( 18 );
		public static string _ProfilingisonlyenabledinaDevelopmentPlayer => L.Tr( 19 );
		public static string _ConnectProfiler => L.Tr( 20 );
		public static string _AutoRunPlayer => L.Tr( 21 );
		public static string _BuildAndRun => L.Tr( 22 );
		public static string _BuildAssetBundletogether => L.Tr( 23 );
		public static string _BuildAppBundle_GooglePlay_ => L.Tr( 24 );
		public static string _ScriptingBackend => L.Tr( 25 );
		public static string _C__CompilerConfiguration => L.Tr( 26 );
		public static string _ScriptingDefineSymbols => L.Tr( 27 );
		public static string _Applybuildonly => L.Tr( 28 );
		public static string _Current => L.Tr( 29 );
		public static string _NotethatWebGLdevelopmentbuildsaremuchlargerthanreleasebuildsandshoundnotbepublicsed => L.Tr( 30 );
		public static string _NoCompression => L.Tr( 31 );
		public static string _StandardCompression_LZMA_ => L.Tr( 32 );
		public static string _ChunkBasedCompression_LZ4_ => L.Tr( 33 );
		public static string _ExcludeTypeInformation => L.Tr( 34 );
		public static string _ForceRebuild => L.Tr( 35 );
		public static string _IgnoreTypeTreeChanges => L.Tr( 36 );
		public static string _AppendHash => L.Tr( 37 );
		public static string _StrictMode => L.Tr( 38 );
		public static string _DryRunBuild => L.Tr( 39 );
		public static string _ClearFiles => L.Tr( 40 );
		public static string _CopyingthebuildresultstoStreamingAssets => L.Tr( 41 );
		public static string _CreateabuildBATfile => L.Tr( 42 );
		public static string _BuildBATcreated => L.Tr( 43 );
		public static string _Autosetting => L.Tr( 44 );
		public static string _Chooseyourplatformfrompreferences_ => L.Tr( 45 );
		public static string _Currentlynotsupported_ => L.Tr( 46 );
		public static string _UseConfigurationName => L.Tr( 47 );
		public static string _Selectplatformtouse => L.Tr( 48 );
		public static string _CompressionFormat => L.Tr( 49 );
		public static string _WebGLresourcesarestoredusingBrotlicompression_ => L.Tr( 50 );
		public static string _WebGLresourcesarestoredusingGzipcompression_ => L.Tr( 51 );
		public static string _WebGLresourcesareuncompressed_ => L.Tr( 52 );
		public static string _LinkerTarget => L.Tr( 53 );
		public static string _Onlyasm_jsoutputwillbegenerated_Thissettinghasbeendeprecated_ => L.Tr( 54 );
		public static string _OnlyWebAssemblyoutputwillbegenerated_ThiswillrequireabrowserwithWebAssemblysupporttorunthegeneratedcontent_ => L.Tr( 55 );
		public static string _Bothasm_jsandWebAssemblyoutputwillbegenerated_TheWebAssemblyversionofthegeneratedcontentwillbeusedifsupportedbythebrowser_otherwise_theasm_jsversionwillbeused_Thissettinghasbeendeprecated_ => L.Tr( 56 );
		public static string _WebAssemblyStreaming => L.Tr( 57 );
		public static string _EnableMultiThread => L.Tr( 58 );
		public static string _MemorySize => L.Tr( 59 );
		public static string _EnableExceptions => L.Tr( 60 );
		public static string _Disableexceptionsupport_ => L.Tr( 61 );
		public static string _Enablethrowsupport_ => L.Tr( 62 );
		public static string _Enableexceptionsupportforallexceptions_withoutstacktraceinformation_ => L.Tr( 63 );
		public static string _Enableexceptionsupportforallexceptions_includingstacktraceinformation_ => L.Tr( 64 );
		public static string _EnableMultithreadingsupport_ => L.Tr( 65 );
		public static string _Whenenabled_Unityoutputsabuildwithmultithreadingsupport_ThegeneratedcontentrequiresabrowserthatsupportsWebAssemblythreads_Thisisanexperimentalfeatureandshouldonlybeusedfortestingpurposes_ => L.Tr( 66 );
		public static string _EnableWebAssemblystreamingcompilation_ => L.Tr( 67 );
		public static string _Whenenabled_UnitycompilestheWebAssemblybinaryfilewhilethefiledownloads_Thissettingrequiresan_application_wasm_mimetype_sosetuptheserveraccordingly_ => L.Tr( 68 );
		public static string _EnableAssetBundleBuild => L.Tr( 69 );
		public static string _Enablingassetexclusionatbuildtime => L.Tr( 70 );
		public static string _ExclusionAssetsList => L.Tr( 71 );
		public static string _BuildSceneSet => L.Tr( 72 );
		public static string _ExcludescenesfromthebuildthatarenotregisteredinBuildSettings => L.Tr( 73 );
		public static string _BuildSettingsScenes => L.Tr( 74 );
		public static string _ScenesotherthanBuildSettings => L.Tr( 75 );
		public static string _Checktheorderofthebuild => L.Tr( 76 );
		public static string _UsethestandardBuildSettings => L.Tr( 77 );
		public static string _Usingtheold_styleProjectSettings => L.Tr( 78 );
		public static string _Registerasafolder => L.Tr( 79 );
		public static string _Registeringfilescontainedinafolder => L.Tr( 80 );
	}

#if UNITY_EDITOR
  [EditorLocalizeClass]
  public class LocalizeEvent {
    [EditorLocalizeMethod]
    public static void Changed() {
			EditorLocalize.Load( Package.name, "3b63796fcdc63d441842ccad9baad1b2" );
			BuildAssistWindow.InitLocalize();
		}
	}
#endif
}
